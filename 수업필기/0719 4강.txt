<복습>
softmax: 다중분류 활성화함수. 여러개의 연산 결과를 정규화하여
모든 클래스의 확률값의 합을 1로 만들자

표준화: 신경망의 결과 예측력을 높이기위한 필수 전처리과정
 (x-평균)/편차 ->비교하기위해
데이터의 민감도: 데이터의 크기가 일정하지않으면 정확도의 문제를 야기한다.
그래서 0~1사이의 값을 갖도록 만든다.
minmax scaling = (x-min)/(max-min)

loss함수: MSE, Categorical-CrossEntropy, Binary-CrossEntropy
순전파가 일어나는 마지막단계. 즉, 역전파가 일어나기 직전단계

입력데이터는 벡터화(np.ndarray)해야한다.

검증(validation): 학습의 진행을 모니터닝할 목적
epoch: 딥러닝의 학습주기. 딥러닝은 미니배치 방식을 이용한다. 이때 batch_size를 잘 설정하는것이 중요하다
    학습주기별로 정확도는 높아지는데, 어느순간 떨어지더라. 그 주기이후에는 과대적합이 발생한것이다.
K-Fold방식: 샘플의 양이 적을때 (K-Fold가 바깥이고 epoch이 안쪽)
    데이터가 작으면 네트워크에 대한 설계를 작게해라
? 복잡도를 낮추자
예측값 = feature * weight + bias

Optimizer: 역전파 과정에서 손실을 최소화하기위해, 가중치(weight, bias)를 갱신한다. 
Adam, RMSprop, Adagrad, SDG

(분류문제에서 활용)활성화함수: sigmoid, relu, tanh, softmax 
Relu: 은닉층에서 활용

perceptron은 딥러닝과 전혀 다름. 뉴런: 비선형함수

cross entropy: 

feature

은닉층의 크기가 작으면 병목현상이 일어난다. 네트워크모델을 설계할 때 완만하게 설계해야한다.

best point(최적점): epoch을 찾아낼때 

파라미터: 학습에 의해 만들어진 데이터
하이퍼파라미터: 입력한 데이터
test데이터는 평가할때만 사용하기때문에, transform할때 transform()을 써야한다. fit_transform(),fit()말고

tensor 암기

<4장. 머신러닝의 기본요소>
141p 용어암기하기

다중분류: 여러개의 분류중에 하나를 할당
다중레이블: 하나의 데이터에 여러개의 레이블을 적용

벡터회귀: 연속적인 값의 집합
단순 홀드아웃 검증:  train_test_split() 을 이용하거나 pandas에서 DataFrame.sample()의 frac을 이용

146p.
-대표성있는 데이터: 예)클래스1에서만 데이터를 뽑으면 신빙성이 떨어진다.
이를 해결하기 위해 stratified fold(각 계층별로 데이터를 뽑는다) 또는 shuffle한다.

-시간의 방향이 있는 데이터는 shuffle을 하면 안된다.

-데이터중복=문제유출과도 같다. 학습부작용

147p.
-벡터화

- 정규화
standard scaler:  (x-평균)/편차
minmax scaling = (x-min)/(max-min)

- 결측값 처리
결측값 제거: 결측비율 또는 건수를 초과하는 경우에 제거
결측값 대체: 대표값(중앙,평균, 최빈값)으로 대체해왔으나 최근에는 머신러닝을 활용
cf) SMOTE - up sampling, under sampling
 : 학습할 데이터가 많지 않을 때, 데이터의 양을 증가시켜서 이상감지(카드탐지, 침입탐지)를 할수있다.

- 네트워크의 과대적합 해소 방안
1. 
2. 용량(capacity) 줄이기
3. 규제적용 (L1, L2 Norm)
4. drop out: 무작위로 센서를 동작시키지않음

큰모델- 안정성이 떨어짐

레이어에 노드들이 존재하기때문에 레이어에 l1또는 l2 규제를 적용
l1_l2 : elastic net(혼합)

손실!! original의 경우: 4에서 과대적합
규제가 적용된 모델: 과대적합이 일어난 이후에도 손실이 안정적
그러나 큰용량의 모델에서는 규제의 효과가 크지않다.

163p
-통계적 검정력
신뢰수준:  
신뢰구간: 
검정력: 신뢰수준보다 작은지

329p. Call back
callback 매커니즘: 특정시점 또는 사건에 의해 등록된 함수가 실행되도록 하는 매커니즘
epoch을 기다리는건 개발자가 설정

직렬화: 
pickle 파이썬은 피클타입으로 저장. 객체의 유효기간이 존재
케라스는 load model을 통해 직렬화함수를 제공?

EarlyStopping: 조기종료


<판다스 시계열 데이터>

인덱스를 맞추는게 중요하다

freq='W-WED' : 매주 수요일

인덱스가 중복이면 그룹핑이 가능하다.
resample('D'): freq=<Day>, closed=left, label=left
freq='BM': business monthend 휴일을 포함하지않은 월말
WOM-3FI: WeekOfMonth 3th Friday

shift : date가 이동 -> 결측치 발생
Tshift : index가 이동 -> 결측치 발생x

rollforward: 뒤로 보냄
asfreq : 

ffill: 결측치가 있으면 결측치 직전 값으로 채움

